Index: src/low/main.c
===================================================================
--- src/low/main.c	(revision 86)
+++ src/low/main.c	(working copy)
@@ -30,13 +30,17 @@
 #include <linux/proc_fs.h> /* /proc management functions */
 #include <linux/slab.h> /* kmalloc(); */
 #include <linux/kthread.h> /* kthread_run(); */
-#include <linux/smp_lock.h> /* lock_kernel(); and related stuff */
+#include <linux/smp_lock.h> /* tikle_lock(); and related stuff */
 #include <linux/sched.h> /* kill_pid(); */
 #include <linux/pid.h> /* struct pid header */
 
 #include "low_defs.h" /* tikle global definitions */
 #include "low_funcs.h" /* tikle functions prototypes */
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,36)
+struct mutex tikle_mutex;
+#endif
+
 /**
  * external definition
  * for /proc tree
@@ -96,6 +100,10 @@
 {
 	int error = 0;
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,36)
+	mutex_init(&tikle_mutex);
+#endif
+
 	/**
 	 * alloc data
 	 */
@@ -205,9 +213,9 @@
 	 */
 /*	if (error == -EINTR) {
 		struct pid *temp = get_task_pid(main_thread, PIDTYPE_PID);
-		lock_kernel();
+		tikle_lock();
 		error = kill_pid(temp, SIGKILL, 1);
-		unlock_kernel();
+		tikle_unlock();
 
 		if (error < 0)
 			printk(KERN_ERR "error %d while killing kernel thread\n", -error);
Index: src/low/config.c
===================================================================
--- src/low/config.c	(revision 86)
+++ src/low/config.c	(working copy)
@@ -294,11 +294,11 @@
 	 * define flags of the thread and run socket
 	 * server as a daemon (run in background)
 	 */
-	lock_kernel();
+	tikle_lock();
 	current->flags |= PF_NOFREEZE;
 	daemonize("main thread");
 	allow_signal(SIGKILL);
-	unlock_kernel();
+	tikle_unlock();
 
 	/**
 	 * sock listener creation
Index: src/low/low_defs.h
===================================================================
--- src/low/low_defs.h	(revision 86)
+++ src/low/low_defs.h	(working copy)
@@ -40,6 +40,36 @@
 #define NUM_FAULTLOAD_OP 10
 
 /**
+ * NIPQUAD* was deprecated in 2.6.35 and has been removed in 2.6.36.
+ */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,36)
+# define NIPQUAD(addr) \
+	((unsigned char *)&addr)[0], \
+	((unsigned char *)&addr)[1], \
+	((unsigned char *)&addr)[2], \
+	((unsigned char *)&addr)[3]
+# define NIPQUAD_FMT "%u.%u.%u.%u"
+#endif
+ 
+/**
+ * The Big Kernel Lock was removed in 2.6.37.
+ *
+ * TODO: Investigate if *lock_kernel() is really needed. Kernels which
+ * CONFIG_BLK is not present have *lock_kernel() defined as no-ops,
+ * therefore the use here must be revised.
+ */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,37)
+#include <linux/mutex.h>
+extern struct mutex tikle_mutex;
+# define tikle_lock() mutex_lock(&tikle_mutex)
+# define tikle_unlock() mutex_unlock(&tikle_mutex)
+#else
+# define tikle_lock() lock_kernel()
+# define tikle_unlock() unlock_kernel()
+#endif
+
+
+/**
  * main thread definition
  */
 extern struct task_struct *main_thread;
